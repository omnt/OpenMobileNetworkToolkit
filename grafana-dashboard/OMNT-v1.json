{
  "__inputs": [
    {
      "name": "DS_INFLUXDB",
      "label": "InfluxDB",
      "description": "",
      "type": "datasource",
      "pluginId": "influxdb",
      "pluginName": "InfluxDB"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "panel",
      "id": "bargauge",
      "name": "Bar gauge",
      "version": ""
    },
    {
      "type": "panel",
      "id": "gauge",
      "name": "Gauge",
      "version": ""
    },
    {
      "type": "panel",
      "id": "geomap",
      "name": "Geomap",
      "version": ""
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "9.3.2"
    },
    {
      "type": "panel",
      "id": "grafana-clock-panel",
      "name": "Clock",
      "version": "2.1.0"
    },
    {
      "type": "datasource",
      "id": "influxdb",
      "name": "InfluxDB",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 2,
  "id": null,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 16,
        "w": 22,
        "x": 0,
        "y": 0
      },
      "id": 2,
      "options": {
        "basemap": {
          "config": {
            "server": "world-imagery"
          },
          "name": "Layer 0",
          "type": "esri-xyz"
        },
        "controls": {
          "mouseWheelZoom": false,
          "showAttribution": true,
          "showDebug": false,
          "showMeasure": true,
          "showScale": true,
          "showZoom": true
        },
        "layers": [
          {
            "config": {
              "showLegend": true,
              "style": {
                "color": {
                  "fixed": "dark-green"
                },
                "opacity": 0.4,
                "rotation": {
                  "fixed": 0,
                  "max": 360,
                  "min": -360,
                  "mode": "mod"
                },
                "size": {
                  "fixed": 5,
                  "max": 15,
                  "min": 2
                },
                "symbol": {
                  "fixed": "img/icons/marker/circle.svg",
                  "mode": "fixed"
                },
                "textConfig": {
                  "fontSize": 12,
                  "offsetX": 0,
                  "offsetY": 0,
                  "textAlign": "center",
                  "textBaseline": "middle"
                }
              }
            },
            "location": {
              "latitude": "latitude",
              "longitude": "longitude",
              "mode": "coords"
            },
            "name": "Points",
            "tooltip": true,
            "type": "markers"
          },
          {
            "config": {
              "blur": 15,
              "radius": 11,
              "weight": {
                "field": "CsiRSRP",
                "fixed": 1,
                "max": 1,
                "min": 0
              }
            },
            "location": {
              "latitude": "latitude",
              "longitude": "longitude",
              "lookup": "MNC",
              "mode": "coords"
            },
            "name": "Heatmap",
            "opacity": 0.3,
            "tooltip": true,
            "type": "heatmap"
          }
        ],
        "tooltip": {
          "mode": "details"
        },
        "view": {
          "allLayers": true,
          "id": "coords",
          "lat": 52.52472,
          "lon": 13.368747,
          "zoom": 16.36
        }
      },
      "pluginVersion": "9.3.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Location\")\n  |> filter(fn: (r) => r[\"_field\"] == \"altitude\" or r[\"_field\"] == \"latitude\" or r[\"_field\"] == \"longitude\" or r[\"_field\"] == \"speed\")\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"last\")",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "hide": false,
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"CellInformation\")\n  |> filter(fn: (r) => r[\"_field\"] == \"TAC\" or r[\"_field\"] == \"SSSINR\" or r[\"_field\"] == \"SSRSRQ\" or r[\"_field\"] == \"SSRSRP\" or r[\"_field\"] == \"PCI\" or r[\"_field\"] == \"OperatorAlphaLong\" or r[\"_field\"] == \"NRARFCN\" or r[\"_field\"] == \"MNC\" or r[\"_field\"] == \"Level\" or r[\"_field\"] == \"IsRegistered\" or r[\"_field\"] == \"Bands\" or r[\"_field\"] == \"CI\" or r[\"_field\"] == \"CellConnectionStatus\" or r[\"_field\"] == \"CellType\")\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> filter(fn: (r) => r[\"CI\"] == \"${cell_id}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
          "refId": "B"
        }
      ],
      "title": "Geo Overview",
      "transformations": [
        {
          "id": "merge",
          "options": {}
        }
      ],
      "type": "geomap"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 250,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "lengthm"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 2,
        "x": 22,
        "y": 0
      },
      "id": 6,
      "options": {
        "displayMode": "gradient",
        "minVizHeight": 10,
        "minVizWidth": 0,
        "orientation": "vertical",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showUnfilled": true
      },
      "pluginVersion": "9.3.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Location\")\n  |> filter(fn: (r) => r[\"_field\"] == \"altitude\")\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "Altitude",
      "type": "bargauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 1,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "velocitykmh"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 2,
        "x": 22,
        "y": 7
      },
      "id": 12,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "9.3.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Location\")\n  |> filter(fn: (r) => r[\"_field\"] == \"speed\")\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "Speed",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "gridPos": {
        "h": 2,
        "w": 2,
        "x": 22,
        "y": 11
      },
      "id": 16,
      "options": {
        "bgColor": "",
        "clockType": "24 hour",
        "countdownSettings": {
          "endCountdownTime": "2022-09-22T20:56:59+02:00",
          "endText": "00:00:00"
        },
        "countupSettings": {
          "beginCountupTime": "2022-09-22T20:56:59+02:00",
          "beginText": "00:00:00"
        },
        "dateSettings": {
          "dateFormat": "YYYY-MM-DD",
          "fontSize": "20px",
          "fontWeight": "normal",
          "locale": "",
          "showDate": false
        },
        "mode": "time",
        "refresh": "sec",
        "timeSettings": {
          "fontSize": "18px",
          "fontWeight": "bold"
        },
        "timezone": "",
        "timezoneSettings": {
          "fontSize": "12px",
          "fontWeight": "normal",
          "showTimezone": false,
          "zoneFormat": "offsetAbbv"
        }
      },
      "pluginVersion": "2.1.0",
      "title": "Clock",
      "type": "grafana-clock-panel"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 22,
        "y": 13
      },
      "id": 14,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "9.3.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: 0, stop: now())\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Location\")\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> keep(columns: [\"_time\"])\n  |> last(column: \"_time\")",
          "refId": "A"
        }
      ],
      "title": "Last Timestamp (UTC)",
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "Kbits"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "downSpeed_kbps"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Download Capability"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "upSpeed_kbps"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Upload Capability"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "MobileRxBytes"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Rx Bits per Second"
              },
              {
                "id": "unit",
                "value": "binbps"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "MobileTxBytes"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Tx Bits per Second"
              },
              {
                "id": "unit",
                "value": "binbps"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 11,
        "w": 12,
        "x": 0,
        "y": 16
      },
      "id": 4,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull",
            "min",
            "max"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"InterfaceThroughput\")\n  |> filter(fn: (r) => r[\"_field\"] == \"downSpeed_kbps\" or r[\"_field\"] == \"upSpeed_kbps\")\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "hide": false,
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"InterfaceThroughput\")\n  |> filter(fn: (r) => r[\"_field\"] == \"MobileRxBytes\" or r[\"_field\"] == \"MobileTxBytes\")\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> derivative(unit: 1s, nonNegative: false)\n  |> map(fn: (r) => ({r with _value: r._value * 8.0}))",
          "refId": "B"
        }
      ],
      "title": "Throughput",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "Kbits"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "bits_per_second"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Bits per Second"
              },
              {
                "id": "unit",
                "value": "binbps"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "rtt"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "RTT"
              },
              {
                "id": "unit",
                "value": "ms"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 11,
        "w": 12,
        "x": 12,
        "y": 16
      },
      "id": 22,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull",
            "min",
            "max"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Iperf3\")\n  |> filter(fn: (r) => r[\"_field\"] == \"bits_per_second\" or r[\"_field\"] == \"rtt\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "Iperf3",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "CsiRSRP"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "CsiRSRP"
              },
              {
                "id": "unit",
                "value": "dBm"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "CsiRSRQ"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "CsiRSRQ"
              },
              {
                "id": "unit",
                "value": "dB"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "CsiSINR"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "CsiSINR"
              },
              {
                "id": "unit",
                "value": "dB"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "SSRSRP"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "SSRSRP"
              },
              {
                "id": "unit",
                "value": "dBm"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "SSRSRQ"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "SSRSRQ"
              },
              {
                "id": "unit",
                "value": "dB"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "SSSINR"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "SSSINR"
              },
              {
                "id": "unit",
                "value": "dB"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 27
      },
      "id": 19,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull",
            "min",
            "max",
            "mean"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"CellInformation\")\n  |> filter(fn: (r) => r[\"_field\"] == \"Level\")\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> filter(fn: (r) => r[\"CI\"] == \"${cell_id}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "Signal (Level)",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "CsiRSRP"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "CsiRSRP"
              },
              {
                "id": "unit",
                "value": "dBm"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "CsiRSRQ"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "CsiRSRQ"
              },
              {
                "id": "unit",
                "value": "dB"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "CsiSINR"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "CsiSINR"
              },
              {
                "id": "unit",
                "value": "dB"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "SSRSRP"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "SSRSRP"
              },
              {
                "id": "unit",
                "value": "dBm"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "SSRSRQ"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "SSRSRQ"
              },
              {
                "id": "unit",
                "value": "dB"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "SSSINR"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "SSSINR"
              },
              {
                "id": "unit",
                "value": "dB"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 16,
        "w": 12,
        "x": 12,
        "y": 27
      },
      "id": 8,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull",
            "min",
            "max",
            "mean"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"CellInformation\")\n  |> filter(fn: (r) => r[\"_field\"] == \"SSRSRP\" or r[\"_field\"] == \"SSRSRQ\" or r[\"_field\"] == \"SSSINR\" or r[\"_field\"] == \"RSRP\" or r[\"_field\"] == \"RSRQ\" or r[\"_field\"] == \"RSSI\")\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> filter(fn: (r) => r[\"CI\"] == \"${cell_id}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "Signal (db / dBm)",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "auto"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "altitude"
            },
            "properties": [
              {
                "id": "unit",
                "value": "lengthm"
              },
              {
                "id": "displayName",
                "value": "altitude"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "speed"
            },
            "properties": [
              {
                "id": "unit",
                "value": "velocitykmh"
              },
              {
                "id": "displayName",
                "value": "speed"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 35
      },
      "id": 18,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull",
            "min",
            "max"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Location\")\n  |> filter(fn: (r) => r[\"_field\"] == \"altitude\" or r[\"_field\"] == \"speed\")\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "Altitude  (over NN) / Speed",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 43
      },
      "id": 21,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "9.3.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"CellInformation\")\n  |> filter(fn: (r) => r[\"_field\"] == \"TAC\" or r[\"_field\"] == \"SSSINR\" or r[\"_field\"] == \"SSRSRQ\" or r[\"_field\"] == \"SSRSRP\" or r[\"_field\"] == \"PCI\" or r[\"_field\"] == \"OperatorAlphaLong\" or r[\"_field\"] == \"NRARFCN\" or r[\"_field\"] == \"MNC\" or r[\"_field\"] == \"Level\" or r[\"_field\"] == \"IsRegistered\" or r[\"_field\"] == \"Bands\" or r[\"_field\"] == \"CI\" or r[\"_field\"] == \"CellConnectionStatus\" or r[\"_field\"] == \"CellType\")\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> filter(fn: (r) => r[\"CI\"] == \"${cell_id}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "Details",
      "transformations": [
        {
          "id": "merge",
          "options": {}
        }
      ],
      "type": "table"
    }
  ],
  "refresh": false,
  "schemaVersion": 37,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "customTagValues = (bucket, tag, predicate=(r) => true, start=v.timeRangeStart, stop=v.timeRangeStop) =>\n  from(bucket: bucket)\n    |> range(start: start, stop: stop)\n    |> filter(fn: predicate)\n    |> keep(columns: [tag])\n    |> group()\n    |> distinct(column: tag)\n\ncustomTagValues(bucket: \"${bucket}\", tag: \"measurement_name\")",
        "hide": 0,
        "includeAll": false,
        "label": "Data Source",
        "multi": false,
        "name": "data_source",
        "options": [],
        "query": "customTagValues = (bucket, tag, predicate=(r) => true, start=v.timeRangeStart, stop=v.timeRangeStop) =>\n  from(bucket: bucket)\n    |> range(start: start, stop: stop)\n    |> filter(fn: predicate)\n    |> keep(columns: [tag])\n    |> group()\n    |> distinct(column: tag)\n\ncustomTagValues(bucket: \"${bucket}\", tag: \"measurement_name\")",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "buckets()",
        "hide": 0,
        "includeAll": false,
        "label": "Measurement",
        "multi": false,
        "name": "bucket",
        "options": [],
        "query": "buckets()",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "customTagValues = (bucket, tag, predicate=(r) => true, start=v.timeRangeStart, stop=v.timeRangeStop) =>\n  from(bucket: bucket)\n    |> range(start: start, stop: stop)\n    |> filter(fn: predicate)\n    |> keep(columns: [tag])\n    |> group()\n    |> distinct(column: tag)\n\ncustomTagValues(bucket: \"${bucket}\", tag: \"CI\")",
        "hide": 0,
        "includeAll": true,
        "label": "Cell ID",
        "multi": true,
        "name": "cell_id",
        "options": [],
        "query": "customTagValues = (bucket, tag, predicate=(r) => true, start=v.timeRangeStart, stop=v.timeRangeStop) =>\n  from(bucket: bucket)\n    |> range(start: start, stop: stop)\n    |> filter(fn: predicate)\n    |> keep(columns: [tag])\n    |> group()\n    |> distinct(column: tag)\n\ncustomTagValues(bucket: \"${bucket}\", tag: \"CI\")",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-1y",
    "to": "now"
  },
  "timepicker": {
    "hidden": false,
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ],
    "type": "timepicker"
  },
  "timezone": "browser",
  "title": "OMNT",
  "uid": "DUM9JbnVk",
  "version": 13,
  "weekStart": ""
}